-------------------------
CHOOSE YOUR OWN ADVENTURE PROJECT

Author: Gabriel Nicholas
Date: 21 February, 2016
-------------------------

OVERVIEW

In this project, you will get the chance to build your very first game. Like
they did in the olden days of computer games, yours will be a text adventure.
Players will have the chance to put in input for what they do and navigate
the world you create for them.


REQUIREMENTS

If you are confused about what your text adventure should look like, check
out the example game. If you are struggling with the code you can also look
at the code for it. Otherwise, try to do it on your own.

* Your game should have at least three rooms that the player can enter.
* The player should not be end the game without winning or losing.
* In each room, the player should be presented with multiple options of
things they can do. The player should be able to enter a number to choose
which action they want to take.
* If the player enters an invalid number, the game should not crash or end.
Instead, it should say that the input was invalid and offer the chance for
the user to add their input again. It should also be able to handle unlimited
bad input. Hint: you might need to use *gasp* recursion!
* At some point in your game, the user should have a chance to pick an object
that gives them an option they wouldn’t have if they hadn’t picked up the
object. See the magic box in the example game if you don’t understand what this
means.

Finally, it’s not necessary, but share your completed game with your friends!
People get a kick out of playing this stuff.


GETTING STARTED

The very first thing you should do is copy this folder and change the name of it
to the following:

YourName_GradeNumber_Adventure

For example, were I a very smart fifth grader I would change the name to this:

Gabe_5_Adventure

To test your program, you can compile the whole project (Ctrl-K), right click on the
Adventure class, and select the main() function.


LOOKING FOR MORE?

If you have completed this project, there are two useful features you can
add to it. First, you can add the ability to enter “q” at any time to quit
the game. Second, you can offer the user the chance to restart the game
if they lose.

Finally, you can always add objects and exciting things like that to your
adventure. If you really get into the adventure game, there’s a much more
exciting way to build one using 2D arrays (email me if you’re interested.)

If you have any questions about this assignment or need guidance, email me
at gabe.nicholas@gmail.com.